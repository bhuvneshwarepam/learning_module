1) Fill in the blanks: occur(s) when two or more threads are blocked forever but
    both appear active. occur(s) when two or more threads try to complete a related
	task at the same time.

	A. Livelock, Deadlock
	B. Deadlock, Starvation
	C. Race conditions, Deadlock
	D. Livelock, Race conditions
	E. Starvation, Race conditions
	F. Deadlock, Livelock

	Answer : F

-----------------------------------------------------------------------------------------------------
2) Which happens when more tasks are submitted to a thread executor than available threads?

    A. The thread executor will throw an exception when a task is submitted that is over its
	thread limit.
	B. The task will be added to an internal queue and completed when there is an available
	thread.
	C. The thread executor will discard any task over its thread limit.
	D. The call to submit the task to the thread executor will wait until there is a thread available before continuing
	E. The thread executor creates new temporary threads to complete the additional tasks

    Answer : B

-----------------------------------------------------------------------------------------------------
3)	What statements about the following code are true? (Choose all that apply.)

	Integer i1 = Arrays.asList(1,2,3,4,5).stream().findAny().get();
	synchronized(i1) { // y1
         Integer i2 = Arrays.asList(6,7,8,9,10)
         .parallelStream()
         .sorted() // y2
         .findAny().get(); // y3
         System.out.println(i1+" "+i2);
	}

	A. It outputs 1 6.
	B. It outputs 1 10.
	C. The code will not compile because of line y1.
	D. The code will not compile because of line y2.
	E. The code will not compile because of line y3.
	F. It compiles but throws an exception at runtime.
	G. The output cannot be determined ahead of time.
	H. It compiles but waits forever at runtime.

    Answer : G

-----------------------------------------------------------------------------------------------------
4) What statements about the following class definition are true? (Choose all that apply.)

	public class TicketManager {
         private TicketManager() { super(); }
         private static TicketManager instance;
         public static synchronized TicketManager getInstance() { // k1
             if (instance == null) instance = new TicketManager(); // k2
                return instance;
             }
         private int tickets;
         public int getTicketCount() { return tickets; }
         public void makeTicketsAvailable(int value) { tickets += value; } // k3
         public void sellTickets(int value) {
            synchronized (this) { // k4
                tickets -= value;
             }
         }
	}

	A. It compiles without issue.
	B. The code will not compile because of line k2.
	C. The code will not compile because of line k3.
	D. The lock locks acquired on k1 and k4 are on the same object.
	E. The class correctly prevents concurrency issues for the value of tickets when accessed
	by multiple threads.
	F. At most one instance of TicketManager will be created in the application.

    Answer :  A E F

-----------------------------------------------------------------------------------------------------
5) Which of the following properties of concurrency are true? (Choose all that apply.)

	A. By itself, concurrency does not guarantee which task will be completed first.
	B. Concurrency always improves the performance of an application.
	C. Computers with a single processor do not benefit from concurrency.
	D. Applications with many resource-heavy tasks tend to benefit more from concurrency
	than ones with CPU-intensive tasks.
	E. Concurrent tasks do not share the same memory

    Answer : A, B

-----------------------------------------------------------------------------------------------------
6) Number of threads in below java program is

    public class ThreadExtended extends Thread {
        public void run() {
			System.out.println("\nThread is running now\n");
		}
		public static void main(String[] args) {
			ThreadExtended threadE = new ThreadExtended();
			threadE.start();
		}
	}

	A. 0
	B. 1
	C. 2
	D. 3

    Answer : C

-----------------------------------------------------------------------------------------------------
7) Which statements is/are correct

	A. On calling Thread start () method a new thread get created.
	B. Thread start () method call run () method internally
	C. Thread run () method can also be called directly to create thread.
	D. All correct

    Answer : B

-----------------------------------------------------------------------------------------------------
8) Which method is used to create a daemon thread?

	A. setDaemon(boolean value)
	B. setThread(boolean value)
	C. createDaemon(boolean value)
	D. makeDeamon(boolean value);

    Answer : A

-----------------------------------------------------------------------------------------------------
9) Which thread will be executed first if two threads have same priority

	A.  They will fall in starvation and none will be executed.
	B. Both will be executed simultaneously
	C. It depends upon operating system
	D. They will be executed on first come first serve basis

    Answer : D

-----------------------------------------------------------------------------------------------------
10) Which of the following exceptions are thrown by the JVM? (Choose all that apply)

	A. ArrayIndexOutOfBoundsException
	B. ExceptionInInitializerError
	C. java.io.IOException
	D. NullPointerException
	E. NumberFormatException

    Answer : A, D, E

-----------------------------------------------------------------------------------------------------
11) What is printed besides the stack trace caused by the NullPointerException from line 16?

		1: public class DoSomething {
		2: public void go() {
		3: System.out.print("A");
		4: try {
		5: stop();
		6: } catch (ArithmeticException e) {
		7: System.out.print("B");
		8: } finally {
		9: System.out.print("C");
		10: }
		11: System.out.print("D");
		12: }
		13: public void stop() {
		14: System.out.print("E");
		15: Object x = null;
		16: x.toString();
		17: System.out.print("F");
		18: }
		19: public static void main(String[] args) {
		20: new DoSomething().go();
		21: }
		22: }

		A. AE
        B. AEBCD
        C. AEC
        D. AECD
        E. No output appears other than the stack trace.

        Answer : Null pointer Exception at line 16

-----------------------------------------------------------------------------------------------------
12. What is the output of the following snippet, assuming a and b are both 0?

	3: try {
	4: return a / b;
	5: } catch (RuntimeException e) {
	6: return -1;
	7: } catch (ArithmeticException e) {
	8: return 0;
	9: } finally {
	10: System.out.print("done");
	11: }

	A. -1
	B. 0
	C. done-1
	D. done0
	E. The code does not compile.
	F. An uncaught exception is thrown.

    Answer : E ( unreachable catch block at line no. 7)

-----------------------------------------------------------------------------------------------------
13. What is the output of the following program?

	1: public class Laptop {
	2: public void start() {
	3: try {
	4: System.out.print("Starting up ");
	5: throw new Exception();
	6: } catch (Exception e) {
	7: System.out.print("Problem ");
	8: System.exit(0);
	9: } finally {
	10: System.out.print("Shutting down ");
	11: }
	12: }
	13: public static void main(String[] args) {
	14: new Laptop().start();
	15: } }

	A. Starting up
	B. Starting up Problem
	C. Starting up Problem Shutting down
	D. Starting up Shutting down
	E. The code does not compile.
	F. An uncaught exception is thrown

    Answer : B

-----------------------------------------------------------------------------------------------------
14) What is the output of the following program?

	1: public class Dog {
	2: public String name;
	3: public void parseName() {
	4: System.out.print("1");
	5: try {
	6: System.out.print("2");
	7: int x = Integer.parseInt(name);
	8: System.out.print("3");
	9: } catch (NumberFormatException e) {
	10: System.out.print("4");
	11: }
	12: }
	13: public static void main(String[] args) {
	14: Dog leroy = new Dog();
	15: leroy.name = "Leroy";
	16: leroy.parseName();
	17: System.out.print("5");
	18: } }

	A. 12
	B. 1234
	C. 1235
	D. 124
	E. 1245
	F. The code does not compile.
	G. An uncaught exception is thrown

    Answer : E

-----------------------------------------------------------------------------------------------------
15) Which of the following statements are true? (Choose all that apply)

	A. You can declare a method with Exception as the return type.
	B. You can declare any subclass of Error in the throws part of a method declaration.
	C. You can declare any subclass of Exception in the throws part of a method
	declaration.
	D. You can declare any subclass of Object in the throws part of a method declaration.
	E. You can declare any subclass of RuntimeException in the throws part of a method
	declaration.

    Answer : A, C, E

-----------------------------------------------------------------------------------------------------
16) How an object can become serializable?

	A) If a class implements java.io.Serializable class
	B) If a class or any superclass implements java.io.Serializable interface
	C) Any object is serializable
	D) No object is serializable

    Answer : A, B

-----------------------------------------------------------------------------------------------------
17) Which of the following methods is used to avoid serialization of new class whose super class already implements Serialization?

    a) writeObject()
    b) readWriteObject()
    c) writeReadObject()
    d) unSerializaedObject()

    Answer : A

-----------------------------------------------------------------------------------------------------
18) What does the output of the following contain? (Choose all that apply)

	12: public static void main(String[] args) {
	13: System.out.print("a");
	14: try {
	15: System.out.print("b");
	16: throw new IllegalArgumentException();
	17: } catch (IllegalArgumentException e) {
	18: System.out.print("c");
	19: throw new RuntimeException("1");
	20: } catch (RuntimeException e) {
	21: System.out.print("d");
	22: throw new RuntimeException("2");
	23: } finally {
	24: System.out.print("e");
	25: throw new RuntimeException("3");
	26: }
	27: }

	A. abce
	B. abde
	C. An exception with the message set to "1"
	D. An exception with the message set to "2"
	E. An exception with the message set to "3"
	F. Nothing; the code does not compile.

    Answer : E,  abce An exception with the message set to "3"

-----------------------------------------------------------------------------------------------------
